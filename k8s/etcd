etcd应用场景：

1、服务发现：

在同一个分布式集群中的进程或服务如何才能找到对方并建立连接.了解集群中是否有进程在监听udp或tcp端口，并且通过名字就可以进行查找和连接。

2、消息发布与订阅：

构建一个配置共享中心，数据提供者在这个配置中心发布消息，而消息使用者则订阅他们关心的主题，一旦相关主题有消息发布，就会实时通知订阅者。通过这种方式可以实现分布式系统配置的集中式管理与实时动态更新
应用中用到的一些配置信息存放在etcd上进行集中管理。应用在启动的时候主动从etcd获取一次配置信息，同时，在etcd节点上注册一个Watcher并等待，以后每次配置有更新的时候，etcd都会实时通知订阅者，以此达到获取最新配置信息的目的。
分布式搜索服务中，索引的元信息和服务器集群机器的节点状态信息存放在etcd中，供各个客户端订阅使用。使用etcd的key TTL功能确保机器状态实时更新。
分布式日志收集系统。收集分布在不同机器上的日志。收集器通常按照应用（或主题）来分配收集任务单元.
系统中信息需要动态自动获取与人工干预修改信息请求内容的情况。对外暴露接口，来获取运行时的信息或提交修改的请求。

3、负载均衡：

etcd本身分布式架构存储的信息访问支持负载均衡。etcd集群化以后，每个etcd的核心节点都可以处理用户的请求。
etcd可以监控一个集群中多个节点的状态，当有一个请求发过来后，可以轮询式地把请求转发给存活着的多个节点。类似KafkaMQ，通过Zookeeper来维护生产者和消费者的负载均衡。同样也可以用etcd来做Zookeeper的工作。

4、分布式通知与协调：

与消息发布和订阅相似，两者都使用了etcd中的Watcher机制，通过注册与异步通知机制，实现分布式环境下不同系统之间的通知与协调，从而对数据变更进行实时处理。
通过etcd进行低耦合的心跳检测。检测系统和被检测系统通过etcd上某个目录关联而非直接关联起来，减少系统的耦合性。
通过etcd完成系统调度。
通过etcd完成工作汇报。子任务启动后，到etcd来注册一个临时工作目录，并且定时将自己的进度进行汇报（将进度写入到这个临时目录）。

5、分布式锁:

因为etcd使用Raft算法保持了数据的强一致性，某次操作存储到集群中的值必然是全局一致的，所以很容易实现分布式锁。锁服务有两种使用方式，一是保持独占，二是控制时序。
保持独占，即所有试图获取锁的用户最终只有一个可以得到。etcd为此提供了一套实现分布式锁原子操作CAS（CompareAndSwap）的API。通过设置prevExist值，可以保证在多个节点同时创建某个目录时，只有一个成功，而该用户即可认为是获得了锁。
控制时序，即所有试图获取锁的用户都会进入等待队列，获得锁的顺序是全局唯一的，同时决定了队列执行顺序。etcd为此也提供了一套API（自动创建有序键），对一个目录建值时指定为POST动作，
这样etcd会自动在目录下生成一个当前最大的值为键，存储这个新的值（客户端编号）。同时还可以使用API按顺序列出所有当前目录下的键值。此时这些键的值就是客户端的时序，而这些键中存储的值可以是代表客户端的编号。

由于Raft算法在做决策时需要多数节点的投票，所以etcd一般部署集群推荐奇数个节点

运行 etcd，将默认组建一个两个节点的集群。数据库服务端默认监听在 2379 和 4001 端口，etcd 实例监听在 2380 和 7001 端口。


etcd 集群的启动有以下三种机制：

静态
etcd 动态发现
DNS 发现

静态启动 etcd 集群要求每个成员都知道集群中的另一个成员。 在许多情况下，群集成员的 IP 可能会提前未知。在这些情况下，可以在发现服务的帮助下引导 etcd 群集。



静态etcd 集群配置文件
ETCD_DATA_DIR="/var/lib/etcd/default.etcd"
ETCD_LISTEN_PEER_URLS="http://192.168.250.139:2380"
ETCD_LISTEN_CLIENT_URLS="http://192.168.250.139:2379,http://127.0.0.1:2379"
ETCD_NAME="etcd_node1"
ETCD_INITIAL_ADVERTISE_PEER_URLS="http://192.168.250.139:2380"
ETCD_ADVERTISE_CLIENT_URLS="http://192.168.250.139:2379"
ETCD_INITIAL_CLUSTER="etcd_node1=http://192.168.250.139:2380,etcd_node2=http://192.168.250.146:2380,etcd_node3=http://192.168.250.147:2380"
ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster"
ETCD_INITIAL_CLUSTER_STATE="new"

集群节点掉线一半以上集群将不可用。
集群某个节点接入不了集群，可以删除/var/lib/etcd/default.etcd/member/* 的集群信息，然后重启所有节点。
